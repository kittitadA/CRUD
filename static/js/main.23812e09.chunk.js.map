{"version":3,"sources":["container/Content/Content.js","container/Add/Add.js","container/Insert/Insert.js","App.js","serviceWorker.js","index.js","container/Insert/Insert.css"],"names":["Content","state","isEdit","onDelete","_this","props","id","onEdit","setState","onEditSubmit","event","preventDefault","nameInput","value","priceInput","productName","_this2","this","react_default","a","createElement","className","onSubmit","htmlFor","type","placeholder","ref","defaultValue","productPrice","rows","onClick","Component","Add","onAdd","localStorage","setItem","JSON","stringify","name","price","Insert","products","parse","getItem","getProducts","filteredProducts","filter","product","Date","getTime","push","originalName","map","textContent","index","container_Content_Content","key","classes","App","container_Add_Add","style","backgroundColor","container_Insert_Insert","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.23812e09.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Content extends Component {\r\n\r\n    state = {\r\n        isEdit: false\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.props.onDelete(this.props.id)\r\n    }\r\n\r\n    onEdit = () => {\r\n        this.setState({ isEdit: true });\r\n    }\r\n\r\n    onEditSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.onEditSubmit(this.nameInput.value, this.priceInput.value, this.props.productName);\r\n\r\n        this.setState({ isEdit: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n          this.state.isEdit ?\r\n\r\n          (<div className=\"row justify-content-center mt-3 mb-3\">\r\n              <form className=\"col-9 col-md-4 p-4 bg-light rounded\" onSubmit={this.onEditSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Title</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                   id=\"exampleInputText\"\r\n                                   placeholder=\"Title\"\r\n                                   ref={nameInput => this.nameInput = nameInput}\r\n                                   defaultValue={this.props.productName}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\">textarea</label>\r\n                        <textarea ref={priceInput => this.priceInput = priceInput }\r\n                                  className=\"form-control\"\r\n                                  id=\"exampleFormControlTextarea1\"\r\n                                  defaultValue={this.props.productPrice}\r\n                                  rows=\"5\"></textarea>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary float-right\">Save</button>\r\n              </form>\r\n          </div>)\r\n\r\n          :\r\n\r\n          (<div className=\"row justify-content-center pb-3\">\r\n              <div className=\"col-9 col-md-6\">\r\n                  <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                          {this.props.productName}\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <p>{this.props.productPrice}</p>\r\n                        <button onClick={this.onDelete} className=\"btn btn-danger mx-1 float-right\">Delete</button>\r\n                        <button onClick={this.onEdit} className=\"btn btn-primary mx-1 float-right\">Edit</button>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>)\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\n\r\nclass Add extends Component {\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.onAdd(this.nameInput.value, this.priceInput.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"row justify-content-center mt-3 mb-3\">\r\n              <form className=\"col-9 col-md-4 p-4 bg-light rounded\" onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Title</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                   id=\"exampleInputText\"\r\n                                   ref={nameInput => this.nameInput = nameInput}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\">textarea</label>\r\n                        <textarea ref={priceInput => this.priceInput = priceInput }\r\n                                  className=\"form-control\" id=\"exampleFormControlTextarea1\"\r\n                                  rows=\"5\"></textarea>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary float-right\">Submit</button>\r\n              </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Add;\r\n","import React, { Component } from 'react';\r\n\r\nimport classes from './Insert.css';\r\nimport Content from '../Content/Content';\r\nimport Add from '../Add/Add';\r\n\r\nconst products = [\r\n  {\r\n    id: '1sa3d12',\r\n    name: 'Title1',\r\n    price: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, '\r\n  },\r\n  {\r\n    id: 'as12d3a13',\r\n    name: 'Title2',\r\n    price: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, '\r\n  }\r\n];\r\n\r\nlocalStorage.setItem('products', JSON.stringify(products));\r\n\r\nclass Insert extends Component {\r\n\r\n  state = {\r\n    products: JSON.parse(localStorage.getItem('products'))\r\n  }\r\n\r\n    componentWillMount() {\r\n        const products = this.getProducts();\r\n        this.setState({ products });\r\n    }\r\n\r\n    getProducts = () => {\r\n      return this.state.products\r\n    };\r\n\r\n    onDelete = (id) => {\r\n      const products = this.getProducts();\r\n\r\n      const filteredProducts = products.filter((product) => {\r\n          return product.id !== id;\r\n      });\r\n\r\n      this.setState({ products: filteredProducts});\r\n    }\r\n\r\n    onAdd = (name, price) => {\r\n        const products = this.getProducts();\r\n        let d = new Date();\r\n        let id = d.getTime();\r\n        products.push({ name, price, id});\r\n        this.setState({ products });\r\n    }\r\n\r\n    onEditSubmit = (name, price, originalName) => {\r\n        let products = this.getProducts();\r\n\r\n        products = products.map(product => {\r\n            if (product.name === originalName) {\r\n                product.name = name;\r\n                product.price = price;\r\n            }\r\n            return product;\r\n        });\r\n\r\n        this.setState({ products: products });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const textContent = this.state.products.map((product, index) => {\r\n            return (\r\n                <Content\r\n                    key={index}\r\n                    id={product.id}\r\n                    productName={product.name}\r\n                    productPrice={product.price}\r\n                    onDelete={this.onDelete}\r\n                    onEditSubmit={this.onEditSubmit}\r\n                />\r\n            );\r\n          });\r\n\r\n        return (\r\n\r\n              <div className={classes.App}>\r\n                  <h3 className=\"row justify-content-center pt-5 text-dark\">CRUD</h3>\r\n\r\n                  <Add onAdd={this.onAdd}/>\r\n                  { textContent }\r\n\r\n              </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Insert;\r\n","import React, { Component } from 'react';\n\nimport Insert from './container/Insert/Insert';\n\nclass App extends Component {\n\n  style={\n    backgroundColor: '#b4e9e2'\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid min-vh-100\" style={this.style}>\n          <Insert />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Insert__App__1D69q\"};"],"sourceRoot":""}